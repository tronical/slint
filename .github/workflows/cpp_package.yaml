# Copyright Â© SixtyFPS GmbH <info@slint.dev>
# SPDX-License-Identifier: GPL-3.0-only OR LicenseRef-Slint-Royalty-free-2.0 OR LicenseRef-Slint-Software-3.0

name: Build the C++ binary package

on:
    workflow_dispatch:
    workflow_call:
      inputs:
        extra_cmake_flags:
          type: string
          description: Extra CMake flags to pass to the build.
          default: ""

env:
    MACOSX_DEPLOYMENT_TARGET: "11.0"
    # Keep in sync with features in nightly_snapshot.yaml, slint_tool_binary.yaml, api/node/Cargo.toml, and api/python/Cargo.toml
    SLINT_BINARY_FEATURES: "-DSLINT_FEATURE_BACKEND_LINUXKMS_NOSEAT=ON -DSLINT_FEATURE_BACKEND_WINIT=ON -DSLINT_FEATURE_RENDERER_FEMTOVG=ON -DSLINT_FEATURE_RENDERER_SKIA=ON -DSLINT_FEATURE_RENDERER_SOFTWARE=ON"
    SLINT_MCU_FEATURES: "-DSLINT_FEATURE_FREESTANDING=ON -DSLINT_FEATURE_RENDERER_SOFTWARE=ON"
    # env variable used by espup https://github.com/esp-rs/espup?tab=readme-ov-file#github-api
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
    cmake_package_arm_linux:
        env:
            CARGO_INCREMENTAL: false
        strategy:
            matrix:
                gcc_target: [aarch64-linux-gnu, arm-linux-gnueabihf]
                include:
                  - gcc_target: aarch64-linux-gnu
                    rust_target: aarch64-unknown-linux-gnu
                    cmake_system_processor: arm64
                  - gcc_target: arm-linux-gnueabihf
                    rust_target: armv7-unknown-linux-gnueabihf
                    cmake_system_processor: armhf

        runs-on: ubuntu-22.04
        container: ghcr.io/slint-ui/slint/${{ matrix.rust_target }}-cpp
        steps:
            - uses: actions/checkout@v4
            - name: CMake configure
              run: cmake -B build -S . -GNinja -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_SYSTEM_NAME=Linux -DCMAKE_SYSTEM_PROCESSOR=${{ matrix.cmake_system_processor }} -DRust_CARGO_TARGET=${{ matrix.rust_target}} -DCMAKE_C_COMPILER=${{ matrix.gcc_target }}-gcc -DCMAKE_CXX_COMPILER=${{ matrix.gcc_target }}-g++  -DSLINT_COMPILER=download ${{ env.SLINT_BINARY_FEATURES }} ${{ inputs.extra_cmake_flags }}
            - name: CMake build
              run: cmake --build build --parallel
            - name: CMake package                                      
              working-directory: build
              run: cpack -G TGZ
            - name: "Upload C++ packages"
              uses: actions/upload-artifact@v4
              with:
                  name: cpp_bin-${{ matrix.rust_target }}
                  path: build/Slint-cpp-*
